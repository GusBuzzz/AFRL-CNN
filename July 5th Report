The model below is responsible for accurately classifying real and synthetic images

Model's evaluation loss: 0.0096 - accuracy: 0.9937

Model's saved file name: 'model2.1_1920x1080.h5'

Model's code file name: CNN2.1.py

Model's architecture:

model = keras.Sequential([
    # Block One
    # Batch Normalization layers help in stabilizing the training process, improves generalization, and accelerates convergence.
    layers.Conv2D(filters=32, kernel_size=3, activation='relu', padding='same', input_shape=[1080, 1920, 3]),
    #layers.BatchNormalization(),
    layers.MaxPool2D(),

    # Block Two
    layers.Conv2D(filters=64, kernel_size=3, activation='relu', padding='same'),
    #layers.BatchNormalization(),
    layers.MaxPool2D(),

    # Block Three
    layers.Conv2D(filters=128, kernel_size=3, activation='relu', padding='same'),
    #layers.BatchNormalization(),
    layers.MaxPool2D(),

    # Head
    # The size of the dense layer has been increased to 256 neurons, allowing for a more expressive and powerful representation
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    #layers.BatchNormalization(),
    layers.Dropout(0.5),
    layers.Dense(1, activation='sigmoid'),
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

Epochs = 3
Batch size = 16

Observations: This model has been trained using a dataset consisting of 200 real images and 200 synthetic images, resulting in an 
impressive accuracy rate of 99.37%. Each image in the dataset has a resolution of 1920x1080 pixels. The training process took 
approximately 2 hours to complete. After evaluating the model using the test images and their corresponding labels, it demonstrated 
outstanding performance by correctly classifying all the images, achieving a perfect test accuracy of 100%.

* I created a test file called CNN2_Testing.py. Within this file, I implemented a method that selects each image from a folder and 
stores the results of the model in an array. To evaluate the accuracy of the results, I divided the total number of elements in the 
array by 50. The dataset consisted of 50 real images and 50 synthetic images, represented by the labels 0 and 1 respectively. 
Since the total number of outputs in the array should be 50, dividing by 50 allows us to obtain the accuracy. 
The model's results are presented below:

Result array: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]

Test accuracy: [[1.]]

Folder length:  100


